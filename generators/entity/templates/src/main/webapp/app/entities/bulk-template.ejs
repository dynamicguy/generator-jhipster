        // bulk operations start
        vm.areAll<%= entityClassPlural %>Selected = false;
        vm.<%= entityInstancePlural %>Selected = [];
        vm.update<%= entityClassPlural %>Selection = update<%= entityClassPlural %>Selection;
        vm.updateSelected<%= entityClassPlural %> = updateSelected<%= entityClassPlural %>;
        vm.syncSelected = syncSelected;
        vm.deleteSelected = deleteSelected;
        vm.perPages = [10, 20, 30, 50, 100, 200, 500];

        function update<%= entityClassPlural %>Selection(<%= entityInstance %>Array, selectionValue) {
            for (var i = 0; i < <%= entityInstance %>Array.length; i++) {
                <%= entityInstance %>Array[i].isSelected = selectionValue;
            }
            if (selectionValue === false) {
                vm.<%= entityInstancePlural %>Selected = [];
            } else {
                vm.<%= entityInstancePlural %>Selected = <%= entityInstance %>Array;
            }
        }

        function updateSelected<%= entityClassPlural %>(<%= entityInstance %>, selectionValue) {
            if (selectionValue === true) {
                vm.<%= entityInstancePlural %>Selected.push(<%= entityInstance %>);
            } else {
                vm.<%= entityInstancePlural %>Selected.pop(<%= entityInstance %>);
            }
        }

        function deleteSelected() {
            for (var i = 0; i < vm.<%= entityInstancePlural %>Selected.length; i++) {
                var <%= entityInstance %> = vm.<%= entityInstancePlural %>Selected[i];
                if (<%= entityInstance %>.isSelected) {
                    <%= entityClass %>.delete(<%= entityInstance %>);
                }
            }
        }

        function syncSelected() {
            for (var i = 0; i < vm.<%= entityInstancePlural %>Selected.length; i++) {
                var <%= entityInstance %> = vm.<%= entityInstancePlural %>Selected[i];
                if (<%= entityInstance %>.isSelected) {
                    <%= entityClass %>.update(<%= entityInstance %>);
                }
            }
        }
